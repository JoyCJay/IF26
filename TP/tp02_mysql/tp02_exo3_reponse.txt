Exercise 3
1. Affichez les informations contenues dans la relation VIN.
2. Donnez la liste ordonnée des crus.
3. Donnez la liste ordonnée des crus sans les doublons.
4. Donnez la liste des vins de 1980 ordonnés par degré.
5. Quel est le plus fort degré des vins.
Marc LEMERCIER, version du 11.09.2019
Marc LEMERCIER - IF26 2019 - TP02 révisions Java et base de données - page 3/4
6. Quel est le cru ou les crus de plus fort degré.
7. Quel est le degré moyen des crus ?
8. Quels sont les crus (ordonnés par degré et année) de degré supérieur au degré moyen des crus ?
9. Donnez la liste des régions de production de vins.
10. Donnez la liste des producteurs qui n'ont pas de prénom.
11. Donnez la liste par ordre alphabétique des noms et des prénoms des producteurs de vins
n'appartenant pas aux régions suivantes : Corse, Beaujolais, Bourgogne et Rhône.
12. Quel est le nombre de récoltes ?
13. Quelle est la quantité de vin produite de degré > 12 ?
14. Quels sont les noms des producteurs du cru 'Etoile', leurs régions et les quantités de vins récoltés ?
15. Quelle est la liste des crus récoltés en 1979 ordonnée par numéro de producteur ? Afficher le cru, le
numéro du producteur et la quantité produite.
16. Donnez la liste ordonnée des crus et la quantité par cru ?
17. Quelles sont les quantités de vin produites par région ? Donner la liste ordonnée par quantité
décroissante.
18. Donnez la liste des noms et des prénoms des producteurs produisant au moins trois crus.
19. Combien y-a-t-il de producteurs de vin par région dans les régions Savoie et Jura ?
20. Retrouvez toutes les paires de producteurs habitant la même région. Les tuples du résultat seront de
la forme id1, nom1, id2, nom2, région. La présence d'un tuple avec id1 et id2 interdit la présence d'un
tuple avec id2 et id1.





1. select * from vin
2. SELECT cru FROM if26_tp02.vin order by cru asc
3. SELECT distinct cru FROM if26_tp02.vin order by cru asc
4. SELECT * FROM if26_tp02.vin
   where annee=1980
   order by degre
5. SELECT max(degre) FROM if26_tp02.vin;
6. SELECT distinct cru FROM if26_tp02.vin
   where degre = (select max(degre) from if26_tp02.vin)
7.  CREATE 
		ALGORITHM = UNDEFINED 
		DEFINER = `root`@`localhost` 
		SQL SECURITY DEFINER
	VIEW `if26_tp02`.`view_cru_distinct` AS
		SELECT DISTINCT
			`if26_tp02`.`vin`.`cru` AS `cru`,
			`if26_tp02`.`vin`.`degre` AS `degre`
		FROM
			`if26_tp02`.`vin`;
	SELECT avg(degre) FROM if26_tp02.view_cru_distinct;	
8. SELECT distinct cru, degre, annee
	FROM if26_tp02.vin
	where degre > (select avg(degre) from if26_tp02.vin)
	order by degre, annee
9. SELECT region FROM if26_tp02.producteur;
10. select * from if26_tp02.producteur
	where prenom="null"
11. SELECT nom, prenom FROM if26_tp02.producteur
	where region <> "Corse" and region <> "Beaujolais" and region <> "Bourgogne"
12. SELECT count(*) FROM if26_tp02.recolte;
13. SELECT sum(quantite) FROM if26_tp02.recolte
	where vin_id in (select id from if26_tp02.vin where degre > 12)
14. SELECT p.nom, p.region, r.quantite, r.vin_id
	FROM if26_tp02.producteur as p, if26_tp02.recolte as r, if26_tp02.vin as v
	where r.vin_id=v.id and v.cru="Etoile" and r.producteur_id=p.id
15. SELECT v.cru, p.id, r.quantite
	FROM if26_tp02.recolte as r, if26_tp02.vin as v, if26_tp02.producteur as p
	where v.annee=1979 and v.id=r.vin_id and p.id=r.producteur_id
	order by p.id
16. SELECT v.cru, sum(r.quantite) 
	FROM if26_tp02.vin as v, if26_tp02.recolte as r
	where v.id=r.vin_id
	group by v.cru
	order by v.cru
17. SELECT p.region, sum(r.quantite) 
	FROM if26_tp02.producteur p, if26_tp02.recolte r, if26_tp02.vin v
	where p.id=r.producteur_id and v.id=r.vin_id
	group by p.region
	order by sum(r.quantite) desc
18. 不会
19. SELECT count(*), p.region
	FROM if26_tp02.producteur p
	where region="Savoie" or region="Jura"
	group by region
20. SELECT p.nom, p.prenom, v.cru, p.id
	FROM if26_tp02.producteur p, if26_tp02.recolte r, if26_tp02.vin v
	where p.id=r.producteur_id and v.id=r.vin_id
	不会去重